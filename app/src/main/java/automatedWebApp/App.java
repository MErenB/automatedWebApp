/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package automatedWebApp;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;

import java.util.Scanner;

import spark.ModelAndView;
import spark.template.mustache.MustacheTemplateEngine;

import static spark.Spark.get;

import static spark.Spark.post;

public class App {
    public String getGreeting() {
        return "Hello World!";
    }

    public static void main(String[] args) {

        get("/", (req,res) -> "Hello world.");

        get("/compute", 
            (req,res) -> {
                Map<String, String> map = new HashMap<String, String>();
                map.put("result", "Not computed yet!");
                return new ModelAndView(map, "compute.mustache");

            },
            new MustacheTemplateEngine());


        post("/compute",
            (req,res) ->{
                String arrListInput = req.queryParams("ArrayList");
                Scanner sc1 = new Scanner(arrListInput);

                ArrayList<Integer> arrList = new ArrayList<>();
                while(sc1.hasNext()) {
                    arrList.add(Integer.parseInt(sc1.next().replaceAll("\\s","")));
                }
                sc1.close();

                int numInput = Integer.parseInt(req.queryParams("Number").replaceAll("\\s", ""));
                int lowerBoundInput = Integer.parseInt(req.queryParams("Lower Bound").replaceAll("\\s", ""));
                String messageInput = req.queryParams("Message").replaceAll("\\s", "");

                String result = multiplyAllNumbersUpperThanBound(arrList, numInput, lowerBoundInput, messageInput);

                Map<String,String> map = new HashMap<>();
                map.put("result", result);
                return new ModelAndView(map, "compute.mustache");
        },
        new MustacheTemplateEngine());
        
    }

    public static String multiplyAllNumbersUpperThanBound(ArrayList<Integer> arrList, Number number, int lowerBound, String message ) throws IllegalArgumentException {
        if (arrList == null) {
            throw new IllegalArgumentException();
            
        }
        if (number == null) {
            throw new IllegalArgumentException();
        }
        if (message == null) {
            throw new IllegalArgumentException();
        }

        double doubleValue = number.doubleValue();
        double sum = 0;
        for (Integer integer : arrList) {
            if(integer > lowerBound ) {
                sum += integer*doubleValue;
            }            
        }
        if (sum == 0) {
            return "All values are lower than the bound.";
        }
        return message + sum;
    }

}
